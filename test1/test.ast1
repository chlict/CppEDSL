TranslationUnitDecl 0x7f8ee1040008 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x7f8ee1040908 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x7f8ee10405a0 '__int128'
|-TypedefDecl 0x7f8ee1040978 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x7f8ee10405c0 'unsigned __int128'
|-TypedefDecl 0x7f8ee1040d00 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0x7f8ee1040a60 '__NSConstantString_tag'
|   `-CXXRecord 0x7f8ee10409d0 '__NSConstantString_tag'
|-TypedefDecl 0x7f8ee1040da8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x7f8ee1040d60 'char *'
|   `-BuiltinType 0x7f8ee10400a0 'char'
|-TypedefDecl 0x7f8ee107bf50 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list '__va_list_tag [1]'
| `-ConstantArrayType 0x7f8ee107bef0 '__va_list_tag [1]' 1 
|   `-RecordType 0x7f8ee1040e90 '__va_list_tag'
|     `-CXXRecord 0x7f8ee1040e00 '__va_list_tag'
|-ClassTemplateDecl 0x7f8ee107c0d0 <test.cpp:1:1, line:4:1> line:2:8 Range1D
| |-NonTypeTemplateParmDecl 0x7f8ee107bfc0 <line:1:11, col:15> col:15 referenced 'int' depth 0 index 0 d0
| |-CXXRecordDecl 0x7f8ee107c040 <line:2:1, line:4:1> line:2:8 struct Range1D definition
| | |-DefinitionData empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-CXXRecordDecl 0x7f8ee107c358 <col:1, col:8> col:8 implicit struct Range1D
| | `-VarDecl 0x7f8ee107c400 <line:3:5, col:32> col:26 dim 'const int' static constexpr cinit
| |   `-DeclRefExpr 0x7f8ee107c468 <col:32> 'int' NonTypeTemplateParm 0x7f8ee107bfc0 'd0' 'int'
| `-ClassTemplateSpecializationDecl 0x7f8ee107c620 <line:1:1, line:4:1> line:2:8 struct Range1D definition
|   |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
|   | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
|   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveConstructor exists simple trivial needs_implicit
|   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple trivial needs_implicit
|   | `-Destructor simple irrelevant trivial needs_implicit
|   |-TemplateArgument integral 10
|   |-CXXRecordDecl 0x7f8ee107c820 prev 0x7f8ee107c620 <col:1, col:8> col:8 implicit struct Range1D
|   `-VarDecl 0x7f8ee107c8b0 <line:3:5, col:32> col:26 referenced dim 'const int' static constexpr cinit
|     |-value: Int 10
|     `-SubstNonTypeTemplateParmExpr 0x7f8ee107c948 <col:32> 'int'
|       |-NonTypeTemplateParmDecl 0x7f8ee107bfc0 <line:1:11, col:15> col:15 referenced 'int' depth 0 index 0 d0
|       `-IntegerLiteral 0x7f8ee107c928 <line:3:32> 'int' 10
|-FunctionDecl 0x7f8ee107c4f8 <line:6:1, line:8:1> line:6:5 used TestRange1D 'int ()'
| `-CompoundStmt 0x7f8ee107ca90 <col:19, line:8:1>
|   `-ReturnStmt 0x7f8ee107ca80 <line:7:5, col:25>
|     `-ImplicitCastExpr 0x7f8ee107ca68 <col:12, col:25> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x7f8ee107ca38 <col:12, col:25> 'const int' lvalue Var 0x7f8ee107c8b0 'dim' 'const int' non_odr_use_constant
`-FunctionDecl 0x7f8ee107cad0 <line:10:1, line:12:1> line:10:5 Test 'int ()'
  `-CompoundStmt 0x7f8ee107cc58 <col:12, line:12:1>
    `-ReturnStmt 0x7f8ee107cc48 <line:11:5, col:24>
      `-CallExpr 0x7f8ee107cc28 <col:12, col:24> 'int'
        `-ImplicitCastExpr 0x7f8ee107cc10 <col:12> 'int (*)()' <FunctionToPointerDecay>
          `-DeclRefExpr 0x7f8ee107cbb8 <col:12> 'int ()' lvalue Function 0x7f8ee107c4f8 'TestRange1D' 'int ()'
